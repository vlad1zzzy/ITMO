const plot = document.getElementById('plotly');
const step = document.getElementById('step');
const great = document.getElementById('great');
const conjugate = document.getElementById('conjugate');

export function drawGradient(x, y, func, funcStr = "f") {
    const xAns = Math.round(x[x.length - 1]);
    const yAns = Math.round(y[y.length - 1]);
    const size = 500, x_lvl = new Array(size), y_lvl = new Array(size), z_lvl = new Array(size);
    for (let i = 0; i < size; i++) {
        x_lvl[i] = 0.1 * i - 20 + xAns;
        y_lvl[i] = 0.1 * i - 20 + yAns;
        z_lvl[i] = new Array(size);
    }
    for (let i = 0; i < size; i++) {
        for (let j = 0; j < size; j++) {
            z_lvl[j][i] = func(x_lvl[i], y_lvl[j]);
        }
    }

    const trace1 = {
        x: x,
        y: y,
        mode: 'lines+markers',
        marker: {
            color: 'rgb(219, 64, 82)',
            size: 3
        }
    };

    const trace2 = {
        x: x_lvl,
        y: y_lvl,
        z: z_lvl,
        type: 'contour',
        colorscale: 'Jet',
        contours: {
            coloring: 'lines',
            start: 0,
            end: 10000,
            size: 500
        }
    }
    const data = [trace1, trace2];
    const layout = {
        title: "Gradient",
        showlegend: false,
        hovermode: 'closest',

    };
    let config = {responsive: true}
    Plotly.newPlot(plot, data, layout, config);
}

export function drawStepGradient() {
    const n10 = [89, 184, 184, 374, 374, 376, 757, 757, 759, 758, 763, 761, 1549, 1538, 1530, 1565, 1528, 1556, 1573, 1557, 1555, 1553, 1563, 1557, 1564, 3136, 3209, 3156, 3175, 3189, 3185, 3175, 3195, 3153, 3225, 3211, 3165, 3180, 3157, 3190, 3204, 3218, 3211, 3191, 3199, 3233, 3257, 3193, 3221, 3244, 3272, 6608, 6485, 6539, 6604, 6446, 6519, 6550, 6516, 6547, 6682, 6585, 6601, 6399, 6589, 6642, 6557, 6605, 6740, 6764, 6580, 6678, 6652, 6602, 6558, 6792, 6718, 6648, 6699, 6642, 6441, 6579, 6528, 6662, 6670, 6637, 6384, 6578, 6545, 6586, 6700, 6646, 6770, 6805, 6692, 6593, 6780, 6573, 6548]
    const n100 = [89, 183, 184, 373, 374, 377, 751, 757, 763, 763, 765, 765, 1524, 1516, 1563, 1548, 1538, 1567, 1558, 1572, 1571, 1566, 1547, 1589, 1584, 3113, 3140, 3171, 3141, 3085, 3143, 3121, 3168, 3169, 3232, 3162, 3211, 3176, 3166, 3280, 3175, 3225, 3228, 3266, 3280, 3205, 3255, 3278, 3210, 3221, 3284, 6505, 6658, 6476, 6519, 6601, 6339, 6631, 6585, 6609, 6479, 6463, 6573, 6555, 6480, 6517, 6621, 6558, 6509, 6493, 6754, 6573, 6707, 6720, 6757, 6704, 6799, 6651, 6541, 6681, 6708, 6706, 6523, 6728, 6714, 6530, 6788, 6677, 6703, 6634, 6659, 6710, 6732, 6776, 6772, 6698, 6704, 6569, 6886]
    const n1000 = [88, 183, 185, 372, 376, 373, 751, 757, 765, 756, 773, 770, 1512, 1547, 1526, 1538, 1550, 1551, 1559, 1551, 1575, 1570, 1565, 1555, 1560, 3157, 3154, 3175, 3204, 3199, 3166, 3146, 3196, 3163, 3175, 3253, 3211, 3239, 3196, 3181, 3270, 3215, 3172, 3243, 3225, 3222, 3306, 3264, 3264, 3221, 3248, 6347, 6531, 6442, 6442, 6515, 6528, 6546, 6495, 6511, 6583, 6533, 6572, 6481, 6575, 6541, 6531, 6697, 6458, 6564, 6680, 6745, 6713, 6624, 6645, 6653, 6622, 6688, 6767, 6682, 6719, 6867, 6669, 6765, 6834, 6593, 6612, 6615, 6697, 6627, 6668, 6768, 6832, 6523, 6864, 6750, 6657, 6662, 6634]
    const n10000 = [88, 183, 185, 373, 374, 375, 749, 753, 764, 757, 762, 768, 1496, 1538, 1548, 1558, 1548, 1549, 1561, 1571, 1560, 1541, 1574, 1584, 1600, 3061, 3102, 3167, 3163, 3180, 3212, 3220, 3189, 3266, 3174, 3176, 3212, 3225, 3238, 3195, 3157, 3191, 3197, 3168, 3259, 3144, 3267, 3225, 3248, 3229, 3967, 7186, 6840, 6375, 6674, 6980, 7294, 7156, 7295, 7219, 6930, 8064, 7968, 6646, 7962, 7660, 7347, 7988, 7647, 7597, 7862, 7229, 7307, 7886, 6999, 8037, 7693, 8342, 9344, 7999, 9017, 9278, 9371, 8737, 9377, 9677, 9633, 9318, 8447, 10000, 9657, 9706, 9096, 10000, 9671, 9656, 9678, 9634, 9033]
    draw(step, [n10, n100, n1000, n10000], "Step gradient")
}

export function drawGreatGradient() {
    const n10 = [60, 117, 177, 241, 296, 354, 415, 473, 544, 577, 668, 707, 801, 847, 903, 978, 1006, 1106, 1175, 1201, 1285, 1347, 1425, 1453, 1534, 1585, 1710, 1722, 1739, 1871, 1954, 1987, 2072, 2120, 2211, 2283, 2300, 2339, 2429, 2497, 2564, 2629, 2672, 2717, 2825, 2907, 2956, 2993, 3056, 3134, 3219, 3299, 3300, 3357, 3466, 3485, 3494, 3612, 3679, 3767, 3872, 3906, 3996, 3867, 4090, 4205, 4116, 4214, 4381, 4494, 4403, 4544, 4698, 4650, 4622, 4690, 4787, 4842, 4918, 4990, 5048, 5071, 5122, 5210, 5383, 5399, 5144, 5498, 5519, 5599, 5627, 5819, 5853, 5959, 5874, 5912, 5976, 6014, 6107]
    const n100 = [60, 121, 180, 240, 302, 363, 423, 485, 549, 608, 672, 733, 795, 845, 932, 983, 1038, 1118, 1174, 1245, 1306, 1367, 1401, 1507, 1561, 1604, 1675, 1753, 1799, 1818, 1918, 1974, 2041, 2122, 2214, 2222, 2333, 2357, 2402, 2542, 2517, 2645, 2688, 2776, 2814, 2817, 2932, 3041, 3041, 3109, 3199, 3271, 3401, 3375, 3446, 3559, 3498, 3701, 3718, 3793, 3778, 3850, 3940, 3976, 3987, 4102, 4187, 4220, 4210, 4273, 4461, 4462, 4594, 4674, 4794, 4804, 4941, 4841, 4864, 4942, 5045, 5094, 5117, 5317, 5329, 5281, 5432, 5481, 5570, 5580, 5636, 5716, 5839, 5818, 5982, 6007, 6059, 6020, 6213]
    const n1000 = [61, 120, 181, 240, 303, 360, 422, 485, 548, 601, 675, 732, 793, 855, 904, 974, 1042, 1097, 1171, 1223, 1290, 1351, 1419, 1457, 1512, 1595, 1660, 1732, 1809, 1816, 1876, 1923, 2033, 2055, 2132, 2187, 2280, 2329, 2389, 2420, 2466, 2509, 2563, 2677, 2756, 2755, 2973, 2902, 3029, 2949, 2992, 3090, 3172, 3229, 3308, 3312, 3415, 3484, 3552, 3572, 3685, 3709, 3739, 3729, 3808, 3867, 3969, 4059, 3982, 4145, 4251, 4412, 4389, 4424, 4430, 4480, 4630, 4746, 4869, 4814, 4826, 4898, 4857, 5092, 5074, 4994, 5075, 5102, 5295, 5295, 5436, 5525, 5576, 5327, 5619, 5584, 5695, 5643, 5789]
    const n10000 = [61, 120, 181, 241, 299, 360, 420, 478, 545, 597, 656, 725, 771, 833, 900, 956, 1004, 1084, 1146, 1233, 1262, 1297, 1404, 1439, 1531, 1506, 1561, 1639, 1744, 1800, 1800, 1898, 1963, 2036, 2072, 2133, 2218, 2230, 2324, 2371, 2371, 2540, 2503, 2423, 2720, 2586, 2695, 2722, 2756, 2768, 2879, 2923, 2987, 3022, 2914, 3184, 3300, 3331, 3289, 3390, 3353, 3681, 3529, 3652, 3558, 3802, 3738, 3806, 3699, 3877, 3831, 3992, 4130, 3999, 4001, 4166, 4313, 4269, 4283, 4457, 4437, 4519, 4447, 4692, 4707, 4611, 4769, 4595, 4876, 4937, 4711, 4850, 5084, 5298, 5008, 4936, 5173, 5146, 5469]
    draw(great, [n10, n100, n1000, n10000], "Great descent gradient")
}

export function drawConjugateGradient() {
    const n10 = [10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 11, 11, 11, 11, 11, 11, 11, 11, 10, 11, 11, 11, 11, 11]
    const n100 = [17, 25, 30, 33, 37, 41, 40, 46, 45, 47, 48, 49, 45, 49, 51, 50, 53, 54, 50, 52, 50, 53, 58, 50, 60, 49, 53, 57, 57, 55, 54, 56, 52, 59, 56, 57, 56, 60, 51, 57, 59, 60, 61, 58, 61, 59, 59, 53, 53, 59, 61, 62, 56, 60, 59, 63, 58, 60, 64, 62, 60, 58, 61, 59, 62, 62, 66, 58, 60, 63, 61, 61, 61, 59, 61, 59, 64, 58, 60, 64, 64, 64, 62, 59, 61, 63, 62, 65, 61, 64, 65, 60, 63, 63, 57, 67, 64, 63, 64]
    const n1000 = [19, 28, 34, 40, 45, 49, 54, 57, 60, 63, 67, 69, 72, 75, 76, 80, 82, 85, 87, 88, 88, 90, 93, 96, 97, 99, 100, 104, 103, 107, 104, 106, 110, 109, 115, 111, 113, 115, 117, 120, 115, 118, 125, 125, 119, 124, 131, 123, 126, 132, 127, 127, 132, 132, 135, 129, 133, 132, 139, 134, 139, 132, 135, 137, 140, 136, 141, 151, 149, 135, 140, 143, 146, 148, 147, 145, 150, 144, 151, 141, 141, 151, 150, 148, 147, 157, 152, 153, 143, 151, 151, 151, 147, 156, 154, 158, 156, 164, 161]
    const n10000 = [20, 30, 37, 43, 48, 53, 57, 62, 65, 69, 72, 76, 79, 81, 84, 87, 90, 93, 95, 98, 100, 102, 105, 107, 109, 112, 114, 116, 118, 119, 122, 124, 126, 128, 130, 131, 133, 134, 136, 138, 140, 142, 143, 145, 148, 148, 150, 151, 153, 154, 156, 158, 158, 160, 162, 165, 164, 167, 168, 169, 170, 172, 172, 175, 176, 178, 179, 181, 182, 182, 184, 187, 188, 187, 189, 189, 193, 193, 195, 195, 198, 197, 198, 202, 200, 203, 203, 202, 206, 206, 210, 210, 210, 211, 214, 214, 215, 217, 216]
    draw(conjugate, [n10, n100, n1000, n10000], "Conjugate gradient")
}

function getData(n10, n100, n1000, n10000) {
    const x = Array.from({length: 100}, (_, ind) => ind * 10);
    let trace1 = {
        x: x,
        y: n10,
        mode: 'lines+markers',
        name: "n = 10",
        marker: {
            color: 'rgb(219, 64, 82)',
            size: 3
        }
    };

    let trace2 = {
        x: x,
        y: n100,
        mode: 'lines+markers',
        name: "n = 100",
        marker: {
            color: 'rgb(119, 64, 82)',
            size: 3
        }
    };

    let trace3 = {
        x: x,
        y: n1000,
        mode: 'lines+markers',
        name: "n = 1000",
        marker: {
            color: 'rgb(119, 164, 42)',
            size: 3
        }
    };

    let trace4 = {
        x: x,
        y: n10000,
        mode: 'lines+markers',
        name: "n = 10000",
        marker: {
            color: 'rgb(19, 64, 142)',
            size: 3
        }
    };

    return [trace1, trace2, trace3, trace4];
}

function getLayout(title) {
    return {
        title,
        showlegend: true,
        hovermode: 'closest',
        xaxis: {
            title: {
                text: 'Число обусловленности',
                font: {
                    family: 'Courier New, monospace',
                    size: 18,
                    color: '#7f7f7f'
                }
            },
        },
        yaxis: {
            title: {
                text: 'Количество итераций',
                font: {
                    family: 'Courier New, monospace',
                    size: 18,
                    color: '#7f7f7f'
                }
            }
        }
    };
}

function draw(type, stat, title) {
    const data = getData(...stat);
    const layout = getLayout(title);
    const config = {responsive: true}

    Plotly.newPlot(type, data, layout, config);
}
